@model PsiBot.Services.ViewModel.SidePanelDTO
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<html>
<head>
    <script src="https://statics.teams.microsoft.com/sdk/v1.7.0/js/MicrosoftTeams.min.js"></script>
    <script src="https://unpkg.com/@@microsoft/mgt/dist/bundle/mgt-loader.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.1/dist/js.cookie.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</head>
<body style="background-color: transparent;">
    <span id="statusIndicator" class="bg-secondary"></span>
    <span id="refreshBtn" style="display:none">
        <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
             viewBox="0 0 489.645 489.645" style="enable-background:new 0 0 489.645 489.645;" xml:space="preserve">
        <g>
        <path d="M460.656,132.911c-58.7-122.1-212.2-166.5-331.8-104.1c-9.4,5.2-13.5,16.6-8.3,27c5.2,9.4,16.6,13.5,27,8.3
		                    c99.9-52,227.4-14.9,276.7,86.3c65.4,134.3-19,236.7-87.4,274.6c-93.1,51.7-211.2,17.4-267.6-70.7l69.3,14.5
		                    c10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-122.8-25c-20.6-2-25,16.6-23.9,22.9l15.6,123.8
		                    c1,10.4,9.4,17.7,19.8,17.7c12.8,0,20.8-12.5,19.8-23.9l-6-50.5c57.4,70.8,170.3,131.2,307.4,68.2
		                    C414.856,432.511,548.256,314.811,460.656,132.911z" />
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
        <g>
                    </g>
                    </svg>
    </span>
    <div style="display: none" id="error" class="alert alert-danger" role="alert">
        <svg id="importantErrorIcon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-lg" viewBox="0 0 16 16">
            <path d="m9.708 6.075-3.024.379-.108.502.595.108c.387.093.464.232.38.619l-.975 4.577c-.255 1.183.14 1.74 1.067 1.74.72 0 1.554-.332 1.933-.789l.116-.549c-.263.232-.65.325-.905.325-.363 0-.494-.255-.402-.704l1.323-6.208Zm.091-2.755a1.32 1.32 0 1 1-2.64 0 1.32 1.32 0 0 1 2.64 0Z" />
        </svg>
        <span id="errorMessage">
            Something went wrong, please try it later
        </span>
        <svg id="closeErrorIcon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z" />
            <path fill-rule="evenodd" d="M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z" />
        </svg>
    </div>

    <div class="container mb-3">
        <div class="row">
            <div class="col-lg-12 m-0 p-0 pt-1">
                <div id="notHostLabel" class="header-btns" style="display:none">
                    <p id="notHostLabellabel">Only a meeting organizer can add a Meeting Assistant.</p>
                </div>
                <div id="notApprovedLabel" class="header-btns" style="display:none">
                    <p id="notApprovedLabellabel">@Localizer["ADMIN_APPROVAL"].Value</p>
                </div>
                <div id="actionButtons" class="header-btns" style="display:none">
                    <button id="btnInviteBot" onclick="join()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-justify-right" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-4-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
                        </svg> @Localizer["START_TRANSCRIPTION"].Value
                    </button>
                    <button id="btnRemoveBot" style="display:none" onclick="leave()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-justify-right" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-4-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
                        </svg> @Localizer["END_TRANSCRIPTION"].Value
                    </button>
                </div>

                <div id="languageSelection">
                </div>
                <script>

                    asrLang = "@Model.LangId";
                    $('#asrlangsel').on('change', function () {
                        $.get(`${window.location.origin}/teamsapp/setAsrLang?thread=` + meetingId + "&lang=" + this.value);
                        asrLang = this.value;
                    });
                </script>

                <div id="messageListContainer">
                    <ul id="messageList"></ul>
                </div>
                <script>
                    setTimeout(function () {
                        $('#refreshBtn').fadeIn();
                    }, 1000);

                    $.ajaxSetup({
                        contentType: "application/json"
                    });

                    window.onerror = function (msg, url, line) {
                        $("#error").append(msg + url + line);
                    }

                    microsoftTeams.initialize();
                    microsoftTeams.appInitialization.notifySuccess();


                    var mtLang = Cookies.get("mtlang");
                    if (typeof mtLang === 'undefined')
                        mtLang = null;

                    var userId = "";
                    var orgId = "";
                    var meetingId = "";
                    var tenantId = "";
                    var asrLang = "";
                    var transcripturl = "";
                    var timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;

                    const connection = new signalR.HubConnectionBuilder()
                        .withUrl(`${window.location.origin}/captionhub`)
                        .build();

                    function formatTime(timestamp) {
                        var d = new Date(timestamp);
                        var h = d.getHours();
                        var m = "0" + d.getMinutes();
                        var s = "0" + d.getSeconds();
                        return h + ':' + m.substr(-2) + ':' + s.substr(-2);
                    }

                    function nearBottom(forBtn = false) {
                        var messages = document.getElementById('messageListContainer');
                        return messages.scrollTop + messages.clientHeight + 50 >= messages.scrollHeight;
                    }

                    var hasMessages = false;
                    function onMessage(parms) {
                        var isNearBottom = nearBottom();
                        console.log("got message: "+ parms.message);
                        var li = document.getElementById(parms.id);
                        if (li == undefined) {
                            var el = $("#captionTemplate li").clone();
                            el.attr("id", parms.id);
                            el.find(".message-name").text(parms.user);
                            el.find(".message-time").text(formatTime(parms.timestamp));
                            if (parms.message) {
                                el.find(".message-message").text(parms.message);                                
                                el.find(".progress").hide();
                            }
                            el.find(".profile-pic").load(`${window.location.origin}/teamsapp/profilepicture?id=${parms.userid}&name=${parms.user}`);
                            $("#messageList").append(el);
                        } else {
                            if (parms.message) {
                                console.log("showing message "+ parms.message);
                                $(li).find(".message-message").show();
                                $(li).find(".message-message").text(parms.message);                                
                                $(li).find(".progress").hide();
                            }
                        }
                        if (isNearBottom || !hasMessages) {
                            scrollToBottom();
                        }
                        hasMessages = true;
                        setTimeout(checkForScrollToButtomState, 100);
                    }
                    function onStatus(parms) {
                        switch (parms.status) {
                            case "joined":
                                $("#btnInviteBot").hide();
                                $('#notHostLabellabel').hide();
                                $("#btnRemoveBot").show();
                                break;
                            case "joining":
                            case "leaving":
                                $("#btnInviteBot").hide();
                                $('#notHostLabellabel').hide();
                                $("#btnRemoveBot").hide();
                                break;
                            case "":
                                $("#btnInviteBot").show();
                                $('#notHostLabellabel').hide();
                                $("#btnRemoveBot").hide();
                                break;
                        }
                    }
                    connection.on("caption", onMessage);
                    connection.on("status", onStatus);

                    async function start() {
                        try {
                            await connection.start();
                            await connection.invoke("subscribe", meetingId, localStorage.getItem('selectedMTLangauge') ?? '');
                        } catch (err) {
                            setTimeout(start, 5000);
                        }
                    };

                    connection.onclose(async () => {
                        await start();
                    });



                    async function join() {
                        var token = await mgt.Providers.globalProvider.getAccessToken({ scopes: ['OnlineMeetings.Read', 'Chat.ReadBasic'] });
                        var parms = {
                            Tid: tenantId,
                            Oid: userId,
                            Thread: meetingId,
                            AsrLang: asrLang,
                            TimeZone: timeZone,
                            Token: token
                        };
                        var url = `${window.location.origin}/joinCall`;
                        jQuery.ajax({
                            url: url,
                            type: "POST",
                            data: JSON.stringify(parms),
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function () {
                                start();
                            },
                            error: function (data) {
                                $('#error').fadeOut();
                                setTimeout(() => $('#error').fadeIn(), 100);
                            }
                        });
                    }

                    function leave() {
                        $.get(`${window.location.origin}/teamsapp/RemoveBot?thread=` + meetingId);
                    }


                    function LoadTranslationDropdown() {
                        microsoftTeams.getContext(function (context) {
                            $.get(`${window.location.origin}/teamsapp/mtlangs/${context.meetingId}?culture=${context.locale}`, function (data) {
                                $('#langSelectionDiv').remove();
                                $('#languageSelection').append(data);
                                if ($('#mtlangsel > ul > li').length > 2) {
                                    setTimeout(function () {
                                        var selectedMTLang = localStorage.getItem('selectedMTLangauge');
                                        if (selectedMTLang) {
                                            // If localStorage has selected value and value also exists in the dropown menu

                                            if ($('.mtlangsel_' + selectedMTLang).length > 0) {
                                                $('.mtlangsel_' + selectedMTLang).addClass('selected');
                                                var selectedTextValue = $('.mtlangsel_' + selectedMTLang).text();
                                                $('#mtlangselDropdown').text(selectedTextValue);
                                                $('#mtlangsel').val(selectedMTLang).change();
                                            }
                                        }
                                        $('#mtlangsel').on('change', function () {
                                            applyMtLang(this.value)
                                        });
                                    }, 100);
                                } else {
                                    setTimeout(LoadTranslationDropdown, 1000);
                                }
                            });
                        });
                    }
                    microsoftTeams.getContext(context => {
                        document.head.innerHTML += `<link rel="stylesheet" href="/teamsapp/css?theme=${context.theme}">`;
                    });
                    window.onload = function () {
                        const providerStateChanged = async () => {
                            if (mgt.Providers.globalProvider.state === mgt.ProviderState.SignedIn) {
                                var token = await mgt.Providers.globalProvider.getAccessToken({ scopes: ['OnlineMeetings.Read', 'Chat.ReadBasic'] });
                                $.ajax({
                                    type: "POST",
                                    url: `${window.location.origin}/teamsapp/AdminApprovalStatus/${tenantId}`,
                                    data: JSON.stringify(token),
                                    success:
                                        function (isApproved) {
                                            if (isApproved) {
                                                $('#actionButtons').fadeIn();
                                                $('#languageSelection').addClass('pt-4');
                                            } else {
                                                $('#notApprovedLabel').fadeIn();
                                            }
                                        }
                                });
                            }
                        }

                        mgt.Providers.onProviderUpdated(providerStateChanged);
                        mgt.Providers.globalProvider = new mgt.TeamsMsal2Provider({
                            clientId: '@Model.AppId',
                            scopes: ['OnlineMeetings.Read', 'Chat.ReadBasic'],
                            ssoUrl: `${window.location.origin}/teamsapp/authcallback`,
                            authPopupUrl: `${window.location.origin}/teamsapp/auth`,
                            httpMethod: 'POST'
                        });
                        monitorWebsocketStatus();
                        $('#messageListContainer').scroll(function () {
                            checkForScrollToButtomState();
                        })
                        LoadTranslationDropdown();
                        microsoftTeams.getContext(function (context) {
                            try {

                                userId = context.userObjectId;
                                meetingId = context.meetingId;
                                tenantId = context.tid;

                                transcripturl = `${window.location.origin}/teamsapp/transcript?thread=${meetingId}&lang=${mtLang}`;
                                $.get(`${window.location.origin}/teamsapp/botjoined?thread=` + meetingId, function (data) {
                                    if (data == false) {
                                        $("#btnInviteBot").show();
                                        $("#btnRemoveBot").hide();
                                        $('#notHostLabellabel').show();
                                    } else {
                                        $("#btnInviteBot").hide();
                                        $("#btnRemoveBot").show();
                                        $('#notHostLabellabel').hide();
                                        $("#messageListContainer").load(`${window.location.origin}/teamsapp/transcript?thread=${meetingId}&lang=${mtLang}`, function (data) {
                                            $(".message-time").each(function () {
                                                $(this).text(formatTime(parseInt($(this).text())))
                                            });
                                            start();
                                        });
                                    }
                                });
                            } catch (error) {
                                $("#error").append(error);
                                setTimeout(() => $('#error').fadeIn(), 100);
                            }
                        });

                        $('#refreshBtn').click(function () {
                            window.location.reload();
                        });
                    }

                    async function applyMtLang(lang) {
                        localStorage.setItem('selectedMTLangauge', lang || '');
                        if (connection.state == 'Connected') {
                            await connection.invoke("subscribe", meetingId, lang);
                        }
                    }

                    $('#closeErrorIcon').click(function () {
                        if (connection.state == 'Connected') {
                            $('#statusIndicator').removeAttr("class");
                        }
                        $('#error').fadeOut();
                    });

                    function monitorWebsocketStatus() {
                        if (!connection || !connection.state) {
                            setIndicatorClass("bg-secondary");
                        }
                        else if (connection.state == 'Connected') {
                            setIndicatorClass("bg-success");
                        }
                        else if (connection.state == 'Connecting' || connection.state == 'Reconnecting') {
                            setIndicatorClass("bg-warning");
                        }
                        else if (connection.state == 'Disconnected') {
                            start();
                            setIndicatorClass("bg-danger");
                        }
                        setTimeout(monitorWebsocketStatus, 500);
                    }

                    function setIndicatorClass(className) {
                        $statusIndicator = $('#statusIndicator');
                        if (className != $statusIndicator[0].className) {
                            $statusIndicator[0].removeAttribute("class");
                            $statusIndicator.addClass(className);
                        }
                    }

                    function scrollToBottom() {
                        $('#messageListContainer').animate({ scrollTop: $('#messageListContainer')[0].scrollHeight + 200 }, 100);
                    }

                    //setInterval(function(){
                    //    onMessage({user: 'janis', timestamp: new Date(), message: new Date(), id: new Date() });
                    //}, 500);

                    function checkForScrollToButtomState() {
                        if (!nearBottom(true)) {
                            $('#scrollMore').fadeIn();
                        } else {
                            $('#scrollMore').hide();
                        }
                    }
                </script>
                <div id="captionTemplate" hidden>
                    <ul>
                        <li>
                            <div class="profile-pic"></div>

                            <div class="message-right">
                                <div class="message-right-top">
                                    <div class="message-name"></div>
                                    <div class="message-time"></div>
                                </div>
                                <div class="progress">
                                    <object type="image/svg+xml" data="/teamsapp/progress"></object>
                                </div>
                                <div class="message-message">
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <button style="display:none" onclick="scrollToBottom()" id="scrollMore">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z" />
        </svg>
        Go to current
    </button>
</body>
</html>